{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MancavePC - 79\\\\Desktop\\\\Reboot\\\\graphql-github\\\\graphql\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { formatBytes } from '../utils/formatBytes';\nimport { executeQuery, getUserQuery, getUserXpQuery, getUserProgressQuery, getProjectResultsQuery } from '../services/graphql.service';\nimport XpOverTimeGraph from './graphs/XpOverTime';\nimport ProjectsRatioGraph from './graphs/ProjectsRatio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [xpData, setXpData] = useState([]);\n  const [projectsData, setProjectsData] = useState([]);\n  const [totalXp, setTotalXp] = useState(0);\n  const [stats, setStats] = useState({\n    totalProjects: 0,\n    passedProjects: 0,\n    failedProjects: 0,\n    xpByProject: {},\n    skillLevels: {}\n  });\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n  const fetchUserData = async () => {\n    try {\n      setLoading(true);\n\n      // Fetch user basic info\n      const userData = await executeQuery(getUserQuery);\n      setUser(userData.user[0]);\n\n      // Update username in the App component\n      if (userData.user[0] && userData.user[0].login) {\n        // Use local storage to pass the username to the App component\n        localStorage.setItem('username', userData.user[0].login);\n        // This is a simple way to notify the App component that username has been updated\n        window.dispatchEvent(new Event('usernameUpdated'));\n      }\n\n      // Fetch XP transactions\n      const xpResponse = await executeQuery(getUserXpQuery);\n      setXpData(xpResponse.transaction);\n\n      // Calculate total XP\n      const total = xpResponse.transaction.reduce((sum, tx) => sum + tx.amount, 0);\n      setTotalXp(total);\n\n      // Fetch projects progress\n      const progressResponse = await executeQuery(getUserProgressQuery);\n\n      // Fetch project results\n      const resultsResponse = await executeQuery(getProjectResultsQuery);\n\n      // Process projects data\n      const projectsProgress = progressResponse.progress.filter(p => p.object && p.object.type === 'project');\n      setProjectsData(projectsProgress);\n\n      // Calculate statistics\n      calculateStats(xpResponse.transaction, projectsProgress, resultsResponse.result);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch profile data');\n      setLoading(false);\n    }\n  };\n  const calculateStats = (xpTransactions, projects, results) => {\n    // Project stats\n    const projectStats = projects.reduce((stats, project) => {\n      stats.totalProjects++;\n      if (project.grade > 0) {\n        stats.passedProjects++;\n      } else {\n        stats.failedProjects++;\n      }\n      return stats;\n    }, {\n      totalProjects: 0,\n      passedProjects: 0,\n      failedProjects: 0\n    });\n\n    // XP by project path\n    const xpByPath = xpTransactions.reduce((acc, tx) => {\n      const pathParts = tx.path.split('/');\n      const projectKey = pathParts.length >= 3 ? `${pathParts[1]}/${pathParts[2]}` : tx.path;\n      if (!acc[projectKey]) {\n        acc[projectKey] = 0;\n      }\n      acc[projectKey] += tx.amount;\n      return acc;\n    }, {});\n\n    // Extract skills from paths\n    const skillLevels = {};\n    xpTransactions.forEach(tx => {\n      const pathParts = tx.path.split('/');\n      if (pathParts.length >= 3) {\n        const skill = pathParts[2]; // Assumes skill is in the third position of path\n        if (!skillLevels[skill]) {\n          skillLevels[skill] = {\n            xp: 0,\n            count: 0\n          };\n        }\n        skillLevels[skill].xp += tx.amount;\n        skillLevels[skill].count++;\n      }\n    });\n    setStats({\n      ...projectStats,\n      xpByProject: xpByPath,\n      skillLevels\n    });\n  };\n\n  // Get top skills by XP\n  const getTopSkills = (limit = 5) => {\n    return Object.entries(stats.skillLevels).sort((a, b) => b[1].xp - a[1].xp).slice(0, limit).map(([skill, data]) => ({\n      name: skill,\n      xp: data.xp,\n      level: calculateSkillLevel(data.xp)\n    }));\n  };\n\n  // Calculate skill level based on XP\n  const calculateSkillLevel = xp => {\n    if (xp >= 10000) return 'Expert';\n    if (xp >= 5000) return 'Advanced';\n    if (xp >= 2000) return 'Intermediate';\n    if (xp >= 500) return 'Beginner';\n    return 'Novice';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading profile data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"User not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-letter\",\n          children: user.login.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: user.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total XP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: formatBytes(totalXp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: stats.totalProjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Success Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: stats.totalProjects > 0 ? `${Math.round(stats.passedProjects / stats.totalProjects * 100)}%` : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Top Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skills-container\",\n          children: getTopSkills().map((skill, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skill-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skill-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"skill-name\",\n                children: skill.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"skill-level\",\n                children: skill.level\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skill-progress-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skill-progress-bar\",\n                style: {\n                  width: `${Math.min(100, skill.xp / 10000 * 100)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skill-xp\",\n              children: formatBytes(skill.xp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"XP Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xp-distribution\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"xp-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Project/Path\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"XP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"% of Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(stats.xpByProject).sort((a, b) => b[1] - a[1]).slice(0, 5).map(([path, xp], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: path\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatBytes(xp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [(xp / totalXp * 100).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section graphs-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graphs-container\",\n          children: [/*#__PURE__*/_jsxDEV(XpOverTimeGraph, {\n            xpData: xpData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProjectsRatioGraph, {\n            projectsData: projectsData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"1UUFNquyHmCjMR/+OltNcNKOpdc=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","formatBytes","executeQuery","getUserQuery","getUserXpQuery","getUserProgressQuery","getProjectResultsQuery","XpOverTimeGraph","ProjectsRatioGraph","jsxDEV","_jsxDEV","Profile","_s","user","setUser","loading","setLoading","error","setError","xpData","setXpData","projectsData","setProjectsData","totalXp","setTotalXp","stats","setStats","totalProjects","passedProjects","failedProjects","xpByProject","skillLevels","fetchUserData","userData","login","localStorage","setItem","window","dispatchEvent","Event","xpResponse","transaction","total","reduce","sum","tx","amount","progressResponse","resultsResponse","projectsProgress","progress","filter","p","object","type","calculateStats","result","err","message","xpTransactions","projects","results","projectStats","project","grade","xpByPath","acc","pathParts","path","split","projectKey","length","forEach","skill","xp","count","getTopSkills","limit","Object","entries","sort","a","b","slice","map","data","name","level","calculateSkillLevel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","Math","round","index","style","width","min","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/MancavePC - 79/Desktop/Reboot/graphql-github/graphql/src/components/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { formatBytes } from '../utils/formatBytes';\r\nimport {\r\n  executeQuery,\r\n  getUserQuery,\r\n  getUserXpQuery,\r\n  getUserProgressQuery,\r\n  getProjectResultsQuery\r\n} from '../services/graphql.service';\r\nimport XpOverTimeGraph from './graphs/XpOverTime';\r\nimport ProjectsRatioGraph from './graphs/ProjectsRatio';\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [xpData, setXpData] = useState([]);\r\n  const [projectsData, setProjectsData] = useState([]);\r\n  const [totalXp, setTotalXp] = useState(0);\r\n  const [stats, setStats] = useState({\r\n    totalProjects: 0,\r\n    passedProjects: 0,\r\n    failedProjects: 0,\r\n    xpByProject: {},\r\n    skillLevels: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Fetch user basic info\r\n      const userData = await executeQuery(getUserQuery);\r\n      setUser(userData.user[0]);\r\n\r\n      // Update username in the App component\r\n      if (userData.user[0] && userData.user[0].login) {\r\n        // Use local storage to pass the username to the App component\r\n        localStorage.setItem('username', userData.user[0].login);\r\n        // This is a simple way to notify the App component that username has been updated\r\n        window.dispatchEvent(new Event('usernameUpdated'));\r\n      }\r\n\r\n      // Fetch XP transactions\r\n      const xpResponse = await executeQuery(getUserXpQuery);\r\n      setXpData(xpResponse.transaction);\r\n\r\n      // Calculate total XP\r\n      const total = xpResponse.transaction.reduce((sum, tx) => sum + tx.amount, 0);\r\n      setTotalXp(total);\r\n\r\n      // Fetch projects progress\r\n      const progressResponse = await executeQuery(getUserProgressQuery);\r\n\r\n      // Fetch project results\r\n      const resultsResponse = await executeQuery(getProjectResultsQuery);\r\n\r\n      // Process projects data\r\n      const projectsProgress = progressResponse.progress.filter(\r\n        p => p.object && p.object.type === 'project'\r\n      );\r\n      setProjectsData(projectsProgress);\r\n\r\n      // Calculate statistics\r\n      calculateStats(xpResponse.transaction, projectsProgress, resultsResponse.result);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch profile data');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = (xpTransactions, projects, results) => {\r\n    // Project stats\r\n    const projectStats = projects.reduce((stats, project) => {\r\n      stats.totalProjects++;\r\n      if (project.grade > 0) {\r\n        stats.passedProjects++;\r\n      } else {\r\n        stats.failedProjects++;\r\n      }\r\n      return stats;\r\n    }, { totalProjects: 0, passedProjects: 0, failedProjects: 0 });\r\n\r\n    // XP by project path\r\n    const xpByPath = xpTransactions.reduce((acc, tx) => {\r\n      const pathParts = tx.path.split('/');\r\n      const projectKey = pathParts.length >= 3 ? `${pathParts[1]}/${pathParts[2]}` : tx.path;\r\n\r\n      if (!acc[projectKey]) {\r\n        acc[projectKey] = 0;\r\n      }\r\n      acc[projectKey] += tx.amount;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Extract skills from paths\r\n    const skillLevels = {};\r\n    xpTransactions.forEach(tx => {\r\n      const pathParts = tx.path.split('/');\r\n      if (pathParts.length >= 3) {\r\n        const skill = pathParts[2]; // Assumes skill is in the third position of path\r\n        if (!skillLevels[skill]) {\r\n          skillLevels[skill] = { xp: 0, count: 0 };\r\n        }\r\n        skillLevels[skill].xp += tx.amount;\r\n        skillLevels[skill].count++;\r\n      }\r\n    });\r\n\r\n    setStats({\r\n      ...projectStats,\r\n      xpByProject: xpByPath,\r\n      skillLevels\r\n    });\r\n  };\r\n\r\n  // Get top skills by XP\r\n  const getTopSkills = (limit = 5) => {\r\n    return Object.entries(stats.skillLevels)\r\n      .sort((a, b) => b[1].xp - a[1].xp)\r\n      .slice(0, limit)\r\n      .map(([skill, data]) => ({\r\n        name: skill,\r\n        xp: data.xp,\r\n        level: calculateSkillLevel(data.xp)\r\n      }));\r\n  };\r\n\r\n  // Calculate skill level based on XP\r\n  const calculateSkillLevel = (xp) => {\r\n    if (xp >= 10000) return 'Expert';\r\n    if (xp >= 5000) return 'Advanced';\r\n    if (xp >= 2000) return 'Intermediate';\r\n    if (xp >= 500) return 'Beginner';\r\n    return 'Novice';\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading profile data...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">Error: {error}</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <div className=\"error-message\">User not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"profile-header\">\r\n        <div className=\"profile-avatar\">\r\n          {/* Display first letter of username as avatar */}\r\n          <div className=\"avatar-letter\">{user.login.charAt(0).toUpperCase()}</div>\r\n        </div>\r\n\r\n        <div className=\"profile-info\">\r\n          <h2>{user.login}</h2>\r\n          <div className=\"profile-stats\">\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">Total XP</span>\r\n              <span className=\"stat-value\">{formatBytes(totalXp)}</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">Projects</span>\r\n              <span className=\"stat-value\">{stats.totalProjects}</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">Success Rate</span>\r\n              <span className=\"stat-value\">\r\n                {stats.totalProjects > 0\r\n                  ? `${Math.round((stats.passedProjects / stats.totalProjects) * 100)}%`\r\n                  : 'N/A'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"profile-content\">\r\n        <div className=\"profile-section\">\r\n          <h3>Top Skills</h3>\r\n          <div className=\"skills-container\">\r\n            {getTopSkills().map((skill, index) => (\r\n              <div key={index} className=\"skill-item\">\r\n                <div className=\"skill-header\">\r\n                  <span className=\"skill-name\">{skill.name}</span>\r\n                  <span className=\"skill-level\">{skill.level}</span>\r\n                </div>\r\n                <div className=\"skill-progress-container\">\r\n                  <div\r\n                    className=\"skill-progress-bar\"\r\n                    style={{ width: `${Math.min(100, (skill.xp / 10000) * 100)}%` }}\r\n                  ></div>\r\n                </div>\r\n                <div className=\"skill-xp\">{formatBytes(skill.xp)}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile-section\">\r\n          <h3>XP Distribution</h3>\r\n          <div className=\"xp-distribution\">\r\n            <table className=\"xp-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Project/Path</th>\r\n                  <th>XP</th>\r\n                  <th>% of Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.entries(stats.xpByProject)\r\n                  .sort((a, b) => b[1] - a[1])\r\n                  .slice(0, 5)\r\n                  .map(([path, xp], index) => (\r\n                    <tr key={index}>\r\n                      <td>{path}</td>\r\n                      <td>{formatBytes(xp)}</td>\r\n                      <td>{((xp / totalXp) * 100).toFixed(1)}%</td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile-section graphs-section\">\r\n          <h3>Statistics</h3>\r\n          <div className=\"graphs-container\">\r\n            <XpOverTimeGraph xpData={xpData} />\r\n            <ProjectsRatioGraph projectsData={projectsData} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}